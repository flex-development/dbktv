{"version":3,"sources":["utils/app.util.js","utils/error.util.js","utils/index.js","utils/ui.util.js","components/context.js","components/atoms/Advertisement.jsx","components/atoms/Container.jsx","components/atoms/Heading.jsx","components/atoms/Icon.jsx","components/atoms/Image.jsx","components/atoms/Link.jsx","components/atoms/Paragraph.jsx","components/atoms/Video.jsx","components/molecules/Figure.jsx","components/molecules/Logo.jsx","components/molecules/Loading.jsx","components/templates/Article.jsx","components/templates/Articles.jsx","components/templates/Default.jsx","components/templates/Multimedia.jsx","components/templates/News.jsx","components/templates/Preview.jsx","components/templates/Slide.jsx","components/organisms/Deck.jsx","components/organisms/Footer.jsx","components/organisms/Header.jsx","components/organisms/Navigation.jsx","components/organisms/Ticker.jsx","components/screens/Error.jsx","components/screens/Loading.jsx","components/App.jsx","config/sw.config.js","index.js"],"names":["slugify","convert","length","a","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","feathers","error","data","status","BadRequest","NotAuthenticated","PaymentError","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","Timeout","Conflict","LengthRequired","Unprocessable","TooManyRequests","NotImplemented","BadGateway","Unavailable","GeneralError","model","message","errors","auth","context","key","value","e","preview","name","arguments","id","params","app","ui","handle_window_resize","fn","on","$","window","resize","off","handle_window_scroll","scroll","in_viewport","selector","element","bounds","offset","comparison","innerHeight","document","documentElement","clientHeight","innerWidth","clientWidth","top","left","bottom","right","any","all","is_mobile","width","is_scrolled","target","no_selector","no_value","scrollTop","outerHeight","near_bottom","height","smooth_scroll","event","speed","animate","preventDefault","MobileContext","React","createContext","mobile","utils","Advertisement","props","adUnit","className","fetchNow","sizes","trim","Container","children","style","Heading","size","Icon","icon","spin","LoadingIcon","faSpinner","NewspaperIcon","faNewspaper","PhotoVideoIcon","faPhotoVideo","SquareIcon","faSquareFull","StarIcon","faStar","Image","alt","events","src","Link","href","text","Headline","feature","Related","Paragraph","dangerouslySetInnerHTML","__html","Author","author","Blurb","blurb","Category","category","Subheading","heading","Video","autoplay","controls","track","type","autoPlay","Figure","content","credit","media","related","video","caption","Logo","state","current","logos","full","mini","plug","this","Component","Loading","Article","headline","Converter","makeHtml","Articles","subheading","title","ads","articles","ad","map","article","i","dfpNetworkId","Default","Multimedia","addClass","removeClass","News","image","css","Preview","headlines","component","push","Slide","start","duration","clearInterval","timer","setTimeout","history","goForward","template","location","pos","slide","position","next","Deck","count","slides","Consumer","pathname","path","durations","reduce","total","Footer","container","c_props","Header","class","Navigation","DeckNavigation","active","Ticker","items","item","Error","report","info","transform","setState","stack","App","includes","origin","fetch","loading","routes","logging","console","warn","tracking","analytics","env","search","ReactGA","initialize","pageview","debug","process","deck","ticker","subscriptions","snapshot","initialEntries","initialIndex","Provider","mock","Boolean","hostname","match","ReactDOM","render","api","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b331cac5.chunk.js","sourcesContent":["/**\n * @file General utility functions\n * @module utilities/app\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\nexport default {\n  /**\n   * Converts @see @param convert into a SEO-friendly URL slug.\n   *\n   * If @param convert is undefined, null, or empty, the function will return an\n   * empty string.\n   *\n   * @param {string | null | undefined} convert - String to convert\n   * @returns {string} URL optimized string\n   * @see {@link https://medium.com/@mhagemann/the-ultimate-way-to-slugify-a-url-string-in-javascript-b8e4a0d849e1}\n   */\n  slugify: convert => {\n    if (!convert || !convert.length) return ''\n\n    const a = 'àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;'\n    const b = 'aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------'\n    const p = new RegExp(a.split('').join('|'), 'g')\n\n    return convert.toString().toLowerCase()\n      .replace(/\\s+/g, '-') // Replace spaces with -\n      .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n      .replace(/&/g, '-and-') // Replace & with 'and'\n      .replace(/[^\\w-]+/g, '') // Remove all non-word characters\n      .replace(/--+/g, '-') // Replace multiple - with single -\n      .replace(/^-+/, '') // Trim - from start of text\n      .replace(/-+$/, '') // Trim - from end of text\n  }\n}\n","// Packages\nimport {\n  BadGateway, BadRequest, Conflict, Forbidden, GeneralError, LengthRequired, NotAuthenticated, NotFound, NotImplemented, PaymentError, MethodNotAllowed, NotAcceptable, Timeout, TooManyRequests, Unavailable, Unprocessable\n} from '@feathersjs/errors'\n\n/**\n * @file Error utility functions\n * @module utilities/error\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\nexport default {\n  /**\n   * Creates a new Feathers error based on the status argument.\n   *\n   * @param {Error | string} error - Error to transform or error message\n   * @param {object} data - Additional error data\n   * @param {object} data.errors - Typically validation errors or if you want to\n   * group multiple errors together\n   * @param {number} status - Error status code. Defaults to 500\n   * @returns {FeathersError} Feathers error based on the status argument\n   * @throws {BadRequest} If error is incorrect type\n   */\n  feathers: (error, data, status = 500) => {\n    if (!error) {\n      throw new BadRequest('Error argument is required.')\n    }\n\n    switch (status) {\n      case 400:\n        return new BadRequest(error, data)\n      case 401:\n        return new NotAuthenticated(error, data)\n      case 402:\n        return new PaymentError(error, data)\n      case 403:\n        return new Forbidden(error, data)\n      case 404:\n        return new NotFound(error, data)\n      case 405:\n        return new MethodNotAllowed(error, data)\n      case 406:\n        return new NotAcceptable(error, data)\n      case 408:\n        return new Timeout(error, data)\n      case 409:\n        return new Conflict(error, data)\n      case 411:\n        return new LengthRequired(error, data)\n      case 422:\n        return new Unprocessable(error, data)\n      case 429:\n        return new TooManyRequests(error, data)\n      case 501:\n        return new NotImplemented(error, data)\n      case 502:\n        return new BadGateway(error, data)\n      case 503:\n        return new Unavailable(error, data)\n      default:\n        return new GeneralError(error, data)\n    }\n  },\n\n  /**\n   * Transform a Joi schema error to a Feathers error.\n   *\n   * @param {string} message - Error message\n   * @param {Error[]} errors - Array of Joi errors\n   * @param {boolean} auth - True if error should be type NotAuthenticated\n   * @returns {BadRequest | NotAuthenticated}\n   */\n  model: (message, errors, auth = false) => {\n    const { key, value } = errors[0].context\n    const e = {}\n    e[key] = value\n\n    if (auth) return new NotAuthenticated(message, { errors: { ...e } })\n    return new BadRequest(message, { errors: { ...e } })\n  },\n\n  /**\n   * Returns an object containing the name of the function, and the arguments\n   * passed in. Meant to be used with a Feathers service method.\n   *\n   * @param {string} name - Function name\n   * @param {object} param1 - Service method arguments\n   */\n  preview: (name, { id, data, params }) => {\n    return { name, arguments: { id, data, params } }\n  }\n}\n","// Utilities\nimport app from './app.util.js'\nimport error from './error.util.js'\nimport ui from './ui.util.js'\n\n/**\n * @file Application utilities\n * @module utilities\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\nexport default { app, error, ui }\n","// Packages\nimport { GeneralError } from '@feathersjs/errors'\nimport $ from 'jquery'\n\n/**\n * @file UI utility functions\n * @module utilities/ui\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\nexport default {\n  /**\n   * Attaches or detaches a window scroll listener to the window resize event.\n   *\n   * @see @param fn defaults to null, @see @param on defaults to false.\n   *\n   * @param {Function} fn - Function to call on window resize\n   * @param {boolean} on - True if scroll window listener should be added\n   * @returns {boolean} @see @param on\n   * @throws {GeneralError}\n   */\n  handle_window_resize: (fn = null, on = false) => {\n    // Check if resize function exists. If so, attach listener\n    if (on && !fn) throw new GeneralError('Function required.', { on })\n\n    /**\n     * Remove scroll window listener if @see @param on is false,\n     * or attach the listener\n     */\n    on ? $(window).resize(() => fn()) : $(window).off('resize')\n\n    return on\n  },\n\n  /**\n   * Attaches or detaches a window scroll listener to window scroll event.\n   *\n   * @see @param fn defaults to null, @see @param on defaults to false.\n   *\n   * @param {Function} fn - Function to call on window scroll\n   * @param {boolean} on - True if scroll window listener should be added\n   * @returns {boolean} @see @param on\n   * @throws {BadRequest}\n   */\n  handle_window_scroll: (fn = null, on = false) => {\n    // Check if scroll function exists. If so, attach listener\n    if (on && !fn) throw new GeneralError('Function required.', { on })\n\n    /**\n     * Remove scroll window listener if @see @param on is false,\n     * or attach the listener\n     */\n    on ? $(window).scroll(() => fn()) : $(window).off('scroll')\n\n    return on\n  },\n\n  /**\n   * Checks if an element is in the viewport.\n   *\n   * @param {string} selector - A string containing a selector expression\n   * @returns {object} A set of booleans for each side of the element\n   * @throws {GeneralError}\n   */\n  in_viewport: selector => {\n    if (!selector) throw new GeneralError('Missing selector.')\n\n    // Get coordinates of the bounding box\n    let element = $(selector)\n    const bounds = element.offset()\n\n    // Boumds for comparison\n    const comparison = {\n      height: window.innerHeight || document.documentElement.clientHeight,\n      width: window.innerWidth || document.documentElement.clientWidth\n    }\n\n    // Build a set of booleans for each side of the original element\n    element = {}\n\n    element.top = bounds.top < 0\n    element.left = bounds.left < 0\n    element.bottom = bounds.bottom > comparison.height\n    element.right = bounds.right > comparison.width\n\n    element.any = element.top || element.left || element.bottom || element.right\n    element.all = element.top && element.left && element.bottom && element.right\n\n    return element\n  },\n\n  /**\n   * Returns true if the viewport width is <= 768px.\n   *\n   * @returns {boolean} If viewport width is <= 768px.\n   */\n  is_mobile: () => $(window).width() <= 768,\n\n  /**\n   * Returns true if the user has scrolled the page.\n   *\n   * If @see @param selector is defined, and @see @param value is defined as a\n   * value between 0 and 1, the function will return true if the user has\n   * scrolled past @param value percentage of the height of the element\n   * associated with @param selector .\n   *\n   * @param selector must be a valid non-empty string and @param value must be\n   * between 0 and 1, inclusive, otherwise the function will check if the user\n   * has scrolled the page in general.\n   *\n   * @see @param target defaults to the global window object.\n   *\n   * @param {string} selector - String matching element with class to check if\n   * header has scrolled past @see @param value\n   * @param {number} value - If defined as a value between 0 and 1, the function\n   * will return true if the user has scrolled past @param value of the element\n   * associated with @param selector\n   * @param {string} target - Element to get scroll to top value from\n   * @returns {boolean}\n   */\n  is_scrolled: (selector, value, target = window) => {\n    const no_selector = !selector || (selector && !selector.length)\n    const no_value = !value || (value && (value < 0 || value > 1))\n\n    if (no_selector || no_value) return $(target).scrollTop() > 0\n\n    return $(target).scrollTop() >= $(selector).outerHeight() * value\n  },\n\n  /**\n   * Returns true if the scrolled within 100px of the bottom of the page.\n   *\n   * @returns {boolean}\n   */\n  near_bottom: () => {\n    const scrolled = $(window).scrollTop() + $(window).height()\n    return scrolled > $(document).height() - 100\n  },\n\n  /**\n   * Smooth scrolls to the top of @see @param target .\n   *\n   * @see @param target defaults to 'body', @see @param speed defaults to 750.\n   *\n   * @param {Event} event - onClick event\n   * @param {string} target - Element to scroll to the top of\n   * @param {number} speed - Animation speed in milliseconds\n   * @returns {undefined}\n   */\n  smooth_scroll: (event, target = 'body', speed = 500) => {\n    $('html, body').animate({ scrollTop: $(target).offset().top }, speed)\n    if (process.env.NODE_ENV !== 'production') console.info('Smooth scrolled.')\n    event.preventDefault()\n  }\n}\n","// Packages\nimport React from 'react'\n\n// Utility functions\nimport utils from '../utils'\n\n/**\n * @file Context components\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\nconst MobileContext = React.createContext({ mobile: utils.ui.is_mobile() })\n\nexport { MobileContext }\n","// Packages\nimport React from 'react'\nimport { AdSlot } from 'react-dfp'\n\n/**\n * Renders an ad slot wrapped in a div with the base class 'ada-advertisment'.\n *\n * @todo Update documentation\n * @param {object} props - Component properties\n * @returns {HTMLDivElement}\n */\nconst Advertisement = props => {\n  const { adUnit, className, id, fetchNow, sizes } = props\n\n  return (\n    <div id={id} className={(`ada-advertisement ${className || ''}`).trim()}>\n      <AdSlot adUnit={adUnit} sizes={sizes} fetchNow={fetchNow} />\n    </div>\n  )\n}\n\nexport default Advertisement\n","// Packages\nimport React from 'react'\n\n/**\n * @file Component representing a container.\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\n/**\n * Renders a <div> element with the base class 'ada-container'.\n *\n * @returns {HTMLDivElement}\n */\nconst Container = props => {\n  const { children, className, id } = props\n  const style = (`ada-container ${className || ''}`).trim()\n\n  return <div id={id} className={style}>{children}</div>\n}\n\nexport default Container\n","// Packages\nimport React from 'react'\n\n/**\n * @file Component representing a <h1>, <h2>, <h3>, <h4>, <h5>, or <h6> element.\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\n/**\n * Renders a heading element with the base class 'ada-heading'.\n *\n * @param {object} props - Component properties\n * @param {string} props.children - Inner HTML\n * @param {string} props.className - Space delimitted list of extra classes\n * @param {string} props.id - Element id\n * @param {number} props.size - Heading size. Defaults to 1\n * @returns {Heading}\n */\nconst Heading = props => {\n  const { className, children, id, size } = props\n  const style = (`ada-heading ${className || ''}`).trim()\n\n  let element\n\n  switch (size) {\n    case 2:\n      element = <h2 className={style} id={id}>{children}</h2>\n      break\n    case 3:\n      element = <h3 className={style} id={id}>{children}</h3>\n      break\n    case 4:\n      element = <h4 className={style} id={id}>{children}</h4>\n      break\n    case 5:\n      element = <h5 className={style} id={id}>{children}</h5>\n      break\n    case 6:\n      element = <h6 className={style} id={id}>{children}</h6>\n      break\n    default:\n      element = <h1 className={style} id={id}>{children}</h1>\n      break\n  }\n\n  return element\n}\n\nexport default Heading\n","// Packages\nimport React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faNewspaper, faPhotoVideo, faSpinner, faSquareFull, faStar\n} from '@fortawesome/free-solid-svg-icons'\n\n/**\n * @file Icon components\n * @todo Update documentation\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\nconst Icon = props => {\n  const { className, id, icon, spin } = props\n  const style = (`ada-icon ${className || ''}`).trim()\n\n  return <FontAwesomeIcon id={id} className={style} icon={icon} spin={spin} />\n}\n\nconst LoadingIcon = props => {\n  const { className, id, spin } = props\n  const style = (`loading ${className || ''}`).trim()\n\n  return <Icon id={id} className={style} icon={faSpinner} spin={spin} />\n}\n\nconst NewspaperIcon = props => {\n  const { className, id, spin } = props\n  const style = (`newspaper ${className || ''}`).trim()\n\n  return <Icon id={id} className={style} icon={faNewspaper} spin={spin} />\n}\n\nconst PhotoVideoIcon = props => {\n  const { className, id, spin } = props\n  const style = (`photo-video ${className || ''}`).trim()\n\n  return <Icon id={id} className={style} icon={faPhotoVideo} spin={spin} />\n}\n\nconst SquareIcon = props => {\n  const { className, id, spin } = props\n  const style = (`square ${className || ''}`).trim()\n\n  return <Icon id={id} className={style} icon={faSquareFull} spin={spin} />\n}\n\nconst StarIcon = props => {\n  const { className, id, spin } = props\n  const style = (`star ${className || ''}`).trim()\n\n  return <Icon id={id} className={style} icon={faStar} spin={spin} />\n}\n\nexport {\n  Icon as default, LoadingIcon, NewspaperIcon, PhotoVideoIcon, SquareIcon, StarIcon\n}\n","// Packages\nimport React from 'react'\n\n/**\n * @file Component representing an <img> element.\n * @todo Update documentation\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\n/**\n * Renders an <img> element with the base class 'ada-image'.\n *\n * @param {object} props - Component properties\n * @param {string} props.alt - Image description\n * @param {string} props.className - Space delimitted list of extra classes\n * @param {object} props.events - Event functions\n * @param {string} props.id - Element id\n * @param {string} props.src - Image url\n * @param {object | undefined} state - Component state\n * @param {object | undefined} context - Component context\n * @returns {HTMLImageElement}\n */\nconst Image = props => {\n  const { alt, className, events, id, src } = props\n  const style = (`ada-image ${className || ''}`).trim()\n\n  return <img id={id} className={style} src={src} alt={alt} {...events} />\n}\n\nexport default Image\n","// Packages\nimport React from 'react'\n\n/**\n * @file Component representing an <a> element.\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\n/**\n * Renders an anchor element with the base class 'ada-link'.\n *\n * @param {object} props - Component properties\n * @param {*} props.children - Child elements to render\n * @param {string} props.className - Space delimitted list of extra classes\n * @param {string} props.id - Element id\n * @param {string} props.href - URL to navigate to\n * @param {string} props.target - Where to open the url\n * @param {string} props.text - Link text\n * @param {object | undefined} state - Component state\n * @param {object | undefined} context - Component context\n * @returns {HTMLAnchorElement}\n */\nconst Link = props => {\n  const { children, className, id, href, target, text } = props\n  const style = (`ada-link ${className || ''}`).trim()\n\n  return (\n    <a id={id} className={style} href={href} target={target}>\n      {text || children}\n    </a>\n  )\n}\n\n/**\n * Component representing an article headline.\n *\n * @param {object} param0 - Component properties\n * @param {string} param0.text - Article headline\n * @param {string} param0.href - Article link\n * @returns {<Headline>}\n */\nconst Headline = ({ text, href, feature }) => {\n  const style = `headline ${feature ? 'feature' : ''}`\n\n  return (\n    <Link className={style} href={href} target='_blank'>\n      {text}\n    </Link>\n  )\n}\n\n/**\n * Component representing a related article link.\n *\n * @param {object} param0 - Component properties\n * @param {string} param0.text - Article headline\n * @param {string} param0.href - Article link\n * @returns {<Headline>}\n */\nconst Related = ({ text, href }) => (\n  <Link className='related-article' href={href} target='_blank'>{text}</Link>\n)\n\nexport { Link as default, Headline, Related }\n","// Packages\nimport React from 'react'\n\n/**\n * @file Components representing an <p> elements.\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\n/**\n * Renders a paragraph element with the base class 'ada-paragraph'.\n *\n * @param {object} props - Component properties\n * @param {*} props.children - Child elements to render\n * @param {string} props.className - Space delimitted list of extra classes\n * @param {string} props.id - Element id\n * @param {object | undefined} state - Component state\n * @param {object | undefined} context - Component context\n * @returns {HTMLParagraphElement}\n */\nconst Paragraph = props => {\n  const { className, children, id } = props\n  const style = (`ada-paragraph ${className || ''}`).trim()\n\n  return (\n    <p\n      id={id} className={style} dangerouslySetInnerHTML={{\n        __html: children\n      }}\n    />\n  )\n}\n\n/**\n * Component representing an article author.\n *\n * @param {object} param0 - Component properties\n * @param {string} param0.author - Article author\n * @returns {<Paragraph>}\n */\nconst Author = ({ author }) => (\n  <Paragraph className='author'>{author}</Paragraph>\n)\n\n/**\n * Component representing an article blurb.\n *\n * @param {object} param0 - Component properties\n * @param {string} param0.blurb - Article blurb\n * @returns {<Paragraph>}\n */\nconst Blurb = ({ blurb }) => (\n  <Paragraph className='blurb'>{blurb}</Paragraph>\n)\n\n/**\n * Component representing an article category.\n *\n * @param {object} param0 - Component properties\n * @param {string} param0.category - Article category\n * @returns {<Paragraph>}\n */\nconst Category = ({ category }) => (\n  <Paragraph className='category'>{category}</Paragraph>\n)\n\n/**\n * Component representing a subheading.\n *\n * @param {object} param0 - Component properties\n * @param {string} param0.headline - Subheading\n * @returns {<Paragraph>}\n */\nconst Subheading = ({ heading }) => (\n  <Paragraph className='subheading'>{heading}</Paragraph>\n)\n\nexport { Paragraph as default, Author, Blurb, Category, Subheading }\n","// Packages\nimport React from 'react'\n\n/**\n * @file Component representing a <video> element.\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\n/**\n * Renders an <video> element with the base class 'ada-video'.\n *\n * @param {object} props - Component properties\n * @param {string} props.controls - True if controls should be displayed\n * @param {string} props.className - Space delimitted list of extra classes\n * @param {object} props.events - Event functions\n * @param {string} props.id - Element id\n * @param {string} props.src - Video source URL\n * @param {object} props.track - Video subtitle track\n * @param {string} props.type - Video source type\n * @param {object} state - Component state\n * @param {object | undefined} context - Component context\n * @returns {HTMLVideoElement}\n */\nconst Video = props => {\n  const { autoplay, controls, className, events, id, src, track, type } = props\n\n  // Receiving the following ESLint error: \"Media elements such as <audio> and\n  // <video> must have a <track> for captions.\"\n  // To reproduce, remove the comment below that disables the rule.\n\n  /* eslint-disable jsx-a11y/media-has-caption */\n\n  return (\n    <div id={id} className={(`ada-video ${className || ''}`).trim()}>\n      <video\n        autoPlay={autoplay || false} controls={controls || false} {...events}\n      >\n        <source src={src} type={type} />\n        {track ? <track {...track} /> : null}\n      </video>\n    </div>\n\n  )\n\n  /* eslint-enable jsx-a11y/media-has-caption */\n}\n\nexport default Video\n","// Packages\nimport React from 'react'\n\n// Components\nimport {\n  Author, Category, Container, Image, Headline, Related, Video\n} from '../atoms'\n\n/**\n * @file Component representing a <figure> element.\n * @todo Update documentation\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\n/**\n * Renders a <figure> element with the base class 'adm-figcaption'.\n *\n * @param {object} props\n * @returns {HTMLElement}\n */\nconst Figure = props => {\n  const { className, content, id } = props\n\n  const { category, credit, media, related } = content\n\n  return (\n    <figure id={id} className={`adm-figure ${className || ''}`.trim()}>\n      {media.video ? <Video autoplay {...media} /> : <Image {...media} />}\n      <figcaption className='ada-figcaption'>\n        <Container>\n          <div className='caption-header'>\n            <Category category={category} />\n            <Author author={credit} />\n          </div>\n          <Headline\n            href={media.src} text={media.video ? media.caption : media.alt}\n          />\n          {related ? <Related {...related} target='_blank' /> : null}\n        </Container>\n      </figcaption>\n    </figure>\n  )\n}\n\nexport default Figure\n","// Packages\nimport React, { Component } from 'react'\n\n// Components\nimport { Heading, Image, Link } from '../atoms'\n\n/**\n * Class representing the Diamondback TV logo.\n *\n * @class Logo\n * @extends Component\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\nexport default class Logo extends Component {\n  /**\n   * Creates a new Logo component.\n   *\n   * @param {object} props - Component properties\n   * @param {string} props.className - Space delimitted list of extra classes\n   * @param {string} props.id - Element id\n   * @param {boolean} props.mini - If true, returns DBKTV logo instead of the\n   * DiamondbackTV logo\n   * @param {boolean} props.plug - If true, display 'Continue reading on\n   * dbknews.com' beneath the logo (only if @see @param props.mini is false)\n   * @returns {Logo}\n   */\n  constructor(props) {\n    super(props)\n\n    /**\n     * @property {object} state - Component state\n     * @property {object | null} state.current - Current logo image properties\n     * @property {string | undefined} state.current.alt - Logo description\n     * @property {string | undefined} state.current.src - Logo source url\n     * @property {object} state.logos - Full / mini logo image objects\n     * @property {object} state.logos.full - Full size logo image properties\n     * @property {object} state.logos.mini - Mini logo image properties\n     * @property {boolean} state.plug - @see props.mini = F, @see props.plug = T\n     */\n    this.state = {\n      current: null,\n      logos: {\n        full: {\n          alt: 'DiamondbackTV logo full white',\n          src: 'https://firebasestorage.googleapis.com/v0/b/diamondbackcloud.appspot.com/o/assets%2Fimages%2Flogos%2Ftv%2Fsvg%2Fdbktv-logo-full-white.svg?alt=media'\n        },\n        mini: {\n          alt: 'DiamondbackTV logo mini white',\n          src: 'https://firebasestorage.googleapis.com/v0/b/diamondbackcloud.appspot.com/o/assets%2Fimages%2Flogos%2Ftv%2Fsvg%2Fdbktv-logo-mini-white.svg?alt=media'\n        }\n      },\n      plug: false\n    }\n  }\n\n  /**\n   * getDerivedStateFromProps is invoked right before calling the render method,\n   * both on the initial mount and on subsequent updates. It should return an\n   * object to update the state, or null to update nothing.\n   *\n   * This functions determines if the DiamondbackTV logo or the DBKTV logo\n   * should be rendered. If rendering the DiamondbackTV logo, 'Continue reading\n   * on dbknews.com' can be rendered underneath the logo as well.\n   *\n   * @param {object} props - @see Logo#constructor\n   * @param {object} state - @see Logo#constructor\n   * @returns {object} Object to update component state\n   */\n  static getDerivedStateFromProps(props, state) {\n    const { mini, plug } = props\n\n    state.plug = !mini && plug\n    state.current = mini ? state.logos.mini : state.logos.full\n\n    return state\n  }\n\n  /**\n   * Renders the DiamondbackTV logo or the DBKTV logo.\n   * If rendering the DiamondbackTV logo, 'Continue reading on dbknews.com' can\n   * be rendered underneath the logo as well.\n   *\n   * @returns {HTMLDivElement}\n   */\n  render() {\n    const { className, id, mini } = this.props\n    const { current, plug } = this.state\n    const style = `adm-logo ${mini ? 'mini' : 'full'} ${className || ''}`\n\n    return (\n      <div id={id} className={style.trim()}>\n        <Image {...current} />\n        {\n          plug\n            ? (\n              <Heading size={2}>\n                Continue reading on&nbsp;\n                <Link href='https://dbknews.com' target='_blank'>\n                  dbknews.com\n                </Link>\n              </Heading>\n            )\n            : null\n        }\n      </div>\n    )\n  }\n}\n","// Packages\nimport React from 'react'\n\n// Components\nimport { LoadingIcon } from '../atoms'\nimport Logo from './Logo'\n\n/**\n * @file Component representing a loading section.\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\n/**\n * Renders a <div> element representing a loading section.\n *\n * @param {object} props - Component properties\n * @param {object} state - Component state\n * @returns {HTMLDivElement} <main> element\n */\nconst Loading = props => {\n  const { className, id } = props\n\n  return (\n    <div id={id} className={(`adm-loading ${className || ''}`).trim()}>\n      <Logo plug />\n      <LoadingIcon spin />\n    </div>\n  )\n}\n\nexport default Loading\n","// Packages\nimport React from 'react'\nimport { Converter } from 'showdown'\n\n// Components\nimport { Author, Blurb, Category, Headline } from '../atoms'\n\n/**\n * @file Component representing an <article> element.\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\n/**\n * Renders an article with the base class 'adt-article'.\n *\n * @param {object} props - Component properties\n * @param {object} state - Component state\n * @param {object} context - Component context\n * @returns {HTMLElement} <article> element\n */\nconst Article = props => {\n  const { author, blurb, category, className, headline, feature, id } = props\n  const style = `adt-article ${className || ''} ${feature ? ' feature' : ''}`\n\n  const convert = text => (new Converter()).makeHtml(text)\n\n  return (\n    <article id={id} className={style.trim()}>\n      <div className='article-header'>\n        <Category category={category} />\n        <Author author={author} />\n      </div>\n      <Headline feature={feature} {...headline} />\n      <Blurb blurb={convert(blurb)} />\n    </article>\n  )\n}\n\nexport default Article\n","// Packages\nimport React, { Component } from 'react'\nimport { DFPSlotsProvider } from 'react-dfp'\n\n// Components\nimport { Advertisement, Container, Subheading } from '../atoms'\nimport Article from './Article'\n\n/**\n * Component representing the \"Top News\" template.\n * This template should be used to display two articles and an advertisment.\n *\n * @class Articles\n * @extends Component\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\nexport default class Articles extends Component {\n  subheading = 'Continue Reading on <a class=\"ada-link\" href=\"https://dbknews.com\" target=\"_blank\">dbknews.com</a>'\n\n  /**\n   * After the component has mounted, the document title will be updated.\n   *\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    document.title = `Continue reading on dbknews.com`\n  }\n\n  /**\n   * Renders a <div> element representing the \"Articles\" template.\n   *\n   * The \"Articles\" template displays two article previews in the left rail, and\n   * at most 2 300x600 advertisements in the right rail.\n   *\n   * @returns {HTMLDivElement} <div class=\"adt-articles\">\n   */\n  render() {\n    const { className, content, id } = this.props\n    const { ads, articles } = content\n    const style = (`adt-articles ${className || ''}`).trim()\n\n    const NETWORK_ID = '123934970'\n    const ad = { adUnit: ads[0], fetchNow: true, sizes: [[300, 600]] }\n\n    return (\n      <div id={id} className={style}>\n        <Container>\n          <div className='left-rail'>\n            <Subheading heading={this.subheading} />\n            <div className='articles'>\n              {articles.map((article, i) => {\n                return <Article {...article} className='group' key={`a-${i}`} />\n              })}\n            </div>\n\n            <div className='ado-social'>\n              {/* TODO: Get icon license */}\n            </div>\n          </div>\n          <div className='right-rail'>\n            <DFPSlotsProvider dfpNetworkId={NETWORK_ID}>\n              <Advertisement {...ad} />\n            </DFPSlotsProvider>\n          </div>\n        </Container>\n      </div>\n    )\n  }\n}\n","// Packages\nimport React, { Component } from 'react'\n\n// Components\nimport { Container } from '../atoms'\nimport { Logo } from '../molecules'\n\n/**\n * Component representing the default slide.\n *\n * @class Default\n * @extends Component\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\nexport default class Default extends Component {\n  /**\n   * After the component has mounted, the window title will be updated.\n   *\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    document.title = `Continue reading on dbknews.com`\n  }\n\n  /**\n   * Renders a <div> element representing the default slide.\n   *\n   * The default slide displays the DiamondbackTV logo and 'Continue reading\n   * on dbknews.com' beneath the logo.\n   *\n   * @returns {HTMLDivElement} <div class='adt-default'>\n   */\n  render() {\n    const { className, id } = this.props\n\n    return (\n      <div id={id} className={`adt-default ${className || ''}`.trim()}>\n        <Container>\n          <Logo plug />\n        </Container>\n      </div>\n    )\n  }\n}\n","// Packages\nimport React, { Component } from 'react'\nimport $ from 'jquery'\n\n// Components\nimport { Figure } from '../molecules'\n\n/**\n * Class representing the Multimedia template.\n * This template should be used to display an image or video.\n *\n * @class Multimedia\n * @extends Component\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\nexport default class Multimedia extends Component {\n  /**\n   * After the component has mounted, the document title and ui will be updated.\n   * The header will be hidden and the footer will have a border applied.\n   *\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    const { content } = this.props\n    const { media } = content\n\n    document.title = `Gallery: ${media.video ? media.caption : media.alt}`\n\n    $('.ado-header').addClass('ui-hide')\n    $('.ado-footer').addClass('multimedia-border')\n  }\n\n  /**\n   * Before the component unmounts, the ui will be reset to its default state.\n   * The header will reappear and the footer border will be removed.\n   *\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    $('.ado-header').removeClass('ui-hide')\n    $('.ado-footer').removeClass('multimedia-border')\n  }\n\n  /**\n   * Renders a <section> element representing the \"Multimedia\" template.\n   *\n   * @todo Update documentation\n   * @returns {HTMLElement} <section> element\n   */\n  render() {\n    const { className, content, id } = this.props\n\n    return (\n      <div id={id} className={`adt-multimedia ${className || ''}`.trim()}>\n        <Figure content={content} />\n      </div>\n    )\n  }\n}\n","// Packages\nimport React, { Component } from 'react'\nimport $ from 'jquery'\n\n// Components\nimport Article from './Article'\n\n/**\n * Component representing the \"Top News\" template.\n * This template should be used to display a feature article.\n *\n * @class News\n * @extends Component\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\nexport default class News extends Component {\n  /**\n   * After the component has mounted, the document title and deck background\n   * image will be updated.\n   *\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    const { content } = this.props\n    const { headline, image } = content\n\n    document.title = `Top News: ${headline.text}`\n    $('.ado-deck').css('background-image', `url(${image.src})`)\n  }\n\n  /**\n   * Before the component unmounts, the deck background image will be removed\n   * and the @see @class Deck timer will be stopped.\n   *\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    $('.ado-deck').css('background-image', 'none')\n  }\n\n  /**\n   * Renders a <section> element representing the \"Top News\" template.\n   *\n   * @todo Update documentation\n   * @returns {HTMLElement} <section> element\n   */\n  render() {\n    const { className, content, id } = this.props\n\n    return (\n      <div id={id} className={`adt-news ${className || ''}`.trim()}>\n        <Article category='top news' {...content} feature />\n      </div>\n    )\n  }\n}\n","// Packages\nimport React, { Component } from 'react'\n\n// Components\nimport {\n  Category, Headline, PhotoVideoIcon, NewspaperIcon, StarIcon\n} from '../atoms'\n\n/**\n * @file Component representing a deck slide preview.\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\nexport default class Preview extends Component {\n  /**\n   * Creates a new deck slide preview.\n   *\n   * @param {object} props - Component properties\n   * @returns {SlidePreview}\n   */\n  constructor(props) {\n    super(props)\n\n    /**\n     * @property {object} state - Internal component state\n     * @property {object | null} state.category - Template name\n     * @property {object[] | null} state.headlines - Array of preview headlines\n     * @property {Component | null} state.icon - Icon component\n     * @property {string | null} state.type - Name of template in lowercase\n     * @instance\n     */\n    this.state = { category: null, headlines: null, icon: null, type: null }\n  }\n\n  /**\n   * getDerivedStateFromProps is invoked right before calling the render method,\n   * both on the initial mount and on subsequent updates. It should return an\n   * object to update the state, or null to update nothing.\n   *\n   * Based on @see @param props.location, the internal slide state will be\n   * updated.\n   *\n   * The internal mobile state will also be updated.\n   *\n   * @todo Update documentation\n   *\n   * @param {object} props - Incoming component properties\n   * @param {object} state - Incoming component state\n   * @returns {object | null}\n   */\n  static getDerivedStateFromProps(props, state) {\n    const { component, content } = props.data\n\n    let category = component\n    let headlines = []\n    let icon = null\n\n    if (component === 'Articles') {\n      const { articles } = content\n      headlines = articles.map(article => article.headline)\n      icon = <NewspaperIcon />\n    } else if (component === 'Multimedia') {\n      const { alt, caption, src, video } = content.media\n      headlines.push({ href: src, text: video ? caption : alt })\n      category = `Multimedia (${video ? 'Video' : 'Image'})`\n      icon = <PhotoVideoIcon />\n    } else if (component === 'News') {\n      headlines.push(content.headline)\n      icon = <StarIcon />\n    } else {\n      category = 'From the Diamondback Staff'\n      headlines.push({\n        href: 'https://dbknews.com',\n        text: 'Continue reading on dbknews.com'\n      })\n    }\n\n    return {\n      category, headlines, icon, type: component.toLowerCase()\n    }\n  }\n\n  /**\n   * Renders <div> element representing a slide preview.\n   * It will have the base class 'adt-preview'.\n   *\n   * @todo Update documentation\n   * @returns {HTMLElement}\n   */\n  render() {\n    const { className, id } = this.props\n    const { category, headlines, icon, type } = this.state\n\n    return (\n      <div id={id} className={`adt-preview ${type} ${className || ''}`.trim()}>\n        <div className='preview-header'>\n          {icon}<Category category={category} />\n        </div>\n        <div className='headlines'>\n          {headlines.map((headline, i) => {\n            headline.className = 'preview-headline'\n            return <Headline {...headline} key={`ph-${i}`} />\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n","// Packages\nimport React, { Component } from 'react'\n\n// Components\nimport { Articles, Default, Multimedia, News, Preview } from '.'\n\n/**\n * @file Component representing a deck slide.\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\nexport default class Slide extends Component {\n  /**\n   * Creates a new deck slide.\n   *\n   * @param {object} props - Component properties\n   * @returns {slide}\n   */\n  constructor(props) {\n    super(props)\n\n    /**\n     * @property {object} state - Internal component state\n     * @property {object | null} state.data - Slide data\n     * @property {Component | null} state.template - Template component\n     * @property {string | null} state.type - Name of template in lowercase\n     * @instance\n     */\n    this.state = { data: null, template: null, type: null }\n\n    /**\n     * @property {string} timer - Interval id of current slide timer\n     * @instance\n     */\n    this.timer = ''\n  }\n\n  /**\n   * getDerivedStateFromProps is invoked right before calling the render method,\n   * both on the initial mount and on subsequent updates. It should return an\n   * object to update the state, or null to update nothing.\n   *\n   * Based on @see @param props.location, the internal slide state will be\n   * updated.\n   *\n   * The internal mobile state will also be updated.\n   *\n   * @todo Update documentation\n   *\n   * @param {object} props - Incoming component properties\n   * @param {object} state - Incoming component state\n   * @returns {object | null}\n   */\n  static getDerivedStateFromProps(props, state) {\n    const { next, slide } = props.location.state\n    const { component, content, duration, mobile } = slide\n\n    let template = null\n\n    if (mobile) {\n      template = <Preview data={{ component, content }} />\n    } else {\n      if (component === 'Articles') {\n        template = <Articles content={content} />\n      } else if (component === 'Multimedia') {\n        template = <Multimedia content={content} />\n      } else if (component === 'News') {\n        template = <News content={content} />\n      } else {\n        template = <Default />\n      }\n    }\n\n    return { content, duration, next, template, type: component.toLowerCase() }\n  }\n\n  /**\n   * After the component has mounted, the internal state will be updated with\n   * the name of the current template component, the template to render, and the\n   * data associated with it.\n   *\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    const { pos, state } = this.props.location\n    pos(state.slide.position)\n    this.start(true)\n  }\n\n  /**\n   * Clears the slide timer\n   */\n  componentWillUnmount() {\n    this.start(false)\n  }\n\n  /**\n   * Renders <section> element with the base class 'adt-slide'.\n   *\n   * @todo Update documentation\n   * @returns {HTMLElement}\n   */\n  render() {\n    const { className, id } = this.props\n    const { template, type } = this.state\n    const style = `adt-slide ${type} ${className || ''}`\n\n    if (type) style.replace('adt-slide', `adt-slide ${type}`)\n\n    return (\n      <section id={id} className={style.trim()}>\n        {template}\n      </section>\n    )\n  }\n\n  // Helpers\n\n  /**\n   * Starts the slide timer if @see @param start is true. Otherwise, the\n   * interval will be cleared.\n   *\n   * @param {boolean} start - True to start timer. False to clear interval\n   * @returns {string | undefined}\n   */\n  start = start => {\n    const { duration } = this.state\n\n    if (start) {\n      this.timer = setTimeout(() => {\n        this.props.history.goForward()\n      }, process.env.NODE_ENV === 'development' ? 7500 : duration)\n    } else {\n      return clearInterval(this.timer)\n    }\n  }\n}\n","// Packages\nimport React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\n\n// Context\nimport { MobileContext } from '../context'\n\n// Components\nimport { Preview, Slide } from '../templates'\n\n/**\n * Component representing the slide deck\n *\n * @class Deck\n * @extends Component\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\nexport default class Deck extends Component {\n  /**\n   * Creates a new slide deck.\n   *\n   * @param {object} props - Component properties\n   * @param {Function} props.error - Error handling function\n   * @param {Function} props.fetch - Load handling function\n   * @param {string} props.id - Id of current deck\n   * @returns {Deck}\n   */\n  constructor(props) {\n    super(props)\n\n    /**\n     * @property {object} state - Internal component state\n     * @property {number} state.count - Total # of slides in deck\n     * @property {number} state.duration - Deck duration in ms\n     * @property {boolean} state.paused - True if deck is paused\n     * @property {number} state.position - ID of current slide. Defaults to -1\n     * @property {object[]} state.slides - Slide content\n     * @instance\n     */\n    this.state = {\n      count: 0,\n      duration: 0,\n      position: -1,\n      slides: null\n    }\n  }\n\n  /**\n   * Sanitizes the incoming deck data.\n   *\n   * @todo Update documentation\n   *\n   * @param {object} props - Incoming props\n   * @param {object} state - Component state\n   * @returns {object | null} Object to update the state, or null to update\n   * nothing\n   */\n  static getDerivedStateFromProps(props, state) {\n    const { slides } = props\n\n    const count = slides.length\n    const durations = slides.map(slide => slide.duration)\n\n    return {\n      count,\n      duration: durations.reduce((total, value) => total + value),\n      position: 0,\n      slides: slides.map((slide, i) => {\n        slide.state.id = slide.pathname\n        slide.state.next = i === count - 1 ? `/slides/1` : `/slides/${i + 2}`\n        return slide\n      })\n    }\n  }\n\n  /**\n   * Renders a <main> element with the id 'deck' and the class name 'ado-deck'.\n   * The deck slides will be rendered inside of the container.\n   *\n   * @todo Update documentation\n   * @returns {HTMLElement} <main id=\"deck\" class=\"ado-deck\">\n   */\n  render() {\n    const { slides } = this.state\n\n    return (\n      <main id='deck' className='ado-deck'>\n        <MobileContext.Consumer>\n          {({ mobile }) => {\n            return slides.map((slide, i) => {\n              const { pathname, state } = slide\n\n              if (mobile) {\n                return <Preview data={state.slide} key={pathname} />\n              } else {\n                const props = { component: Slide, path: pathname }\n                return <Route {...props} key={pathname} />\n              }\n            })\n          }}\n        </MobileContext.Consumer>\n      </main>\n    )\n  }\n}\n","// Packages\nimport React from 'react'\n\n// Components\nimport { Container } from '../atoms'\n\n/**\n * @file Component representing a <footer> element.\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\n/**\n * Renders a <footer> element with the base class 'ado-footer'.\n *\n * If props.container is defined, props.children will be wrapped in a\n * container element with the base class 'ada-container'.\n *\n * Pass an empty object for the default container, or defined\n * props.container.id and/or props.container.classes for greater control.\n *\n * @param {object} props - Component properties\n * @param {*} props.children - Footer elements\n * @param {string} props.className - Space delimitted list of extra classes\n * @param {object} props.container - If defined, wrap children in container\n * @param {string} props.container.id - Container element id\n * @param {string} props.container.classes - Extra container classes\n * @param {string} props.id - Element id\n * @param {object} state - Component state\n * @returns {HTMLElement} HTML <footer> element.\n */\nconst Footer = props => {\n  const { children, container, className, id } = props\n\n  const c_props = typeof container === 'boolean'\n    ? { children } : { ...container, children }\n\n  return (\n    <footer id={id} className={(`ado-footer ${className || ''}`).trim()}>\n      {\n        container\n          ? <Container {...c_props} />\n          : children\n      }\n    </footer>\n  )\n}\n\nexport default Footer\n","// Packages\nimport React from 'react'\n\n// Components\nimport { Container } from '../atoms'\n\n/**\n * @file Component representing a <header> element.\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\n/**\n * Renders a <header> element with the base class 'ado-header'.\n *\n * If props.container is defined, props.children will be wrapped in a\n * container element with the base class 'ada-container'.\n *\n * Pass an empty object for the default container, or defined\n * props.container.id and/or props.container.classes for greater control.\n *\n * @param {object} props - Component properties\n * @param {*} props.children - Header elements\n * @param {string} props.class - Space delimitted list of extra classes\n * @param {object} props.container - If defined, wrap children in container\n * @param {string} props.container.id - Container element id\n * @param {string} props.container.classes - Extra container classes\n * @param {string} props.id - Element id\n * @param {object} state - Component state\n * @returns {HTMLElement} HTML <header> element\n */\nconst Header = props => {\n  const { id, children, container } = props\n\n  const c_props = typeof container === 'boolean'\n    ? { children } : { ...container, children }\n\n  return (\n    <header id={id} className={(`ado-header ${props.class || ''}`).trim()}>\n      {container ? <Container {...c_props} /> : children}\n    </header>\n  )\n}\n\nexport default Header\n","// Packages\nimport React from 'react'\n\n// Context\nimport { MobileContext } from '../context'\n\n// Components\nimport { Container, SquareIcon } from '../atoms'\n\n/**\n * @file Component representing a <nav> element.\n * @todo Update documentation\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\n/**\n * Renders a <nav> element with the base class 'ado-nav'.\n *\n * If props.container is defined, props.children will be wrapped in a\n * container element with the base class 'ada-container'.\n *\n * Pass an empty object for the default container, or defined\n * props.container.id and/or props.container.classes for greater control.\n *\n * @param {object} props - Component properties\n * @param {*} props.children - Header elements\n * @param {string} props.className - Space delimitted list of extra classes\n * @param {object} props.container - If defined, wrap children in container\n * @param {string} props.container.id - Container element id\n * @param {string} props.container.classes - Extra container classes\n * @param {string} props.id - Element id\n * @param {object} state - Component state\n * @returns {HTMLElement} HTML <nav> element\n */\nconst Navigation = props => {\n  const { id, children, container, mobile } = props\n\n  const style = `ado-nav ${props.className || ''} ${mobile ? 'ui-mobile' : ''}`\n\n  const c_props = typeof container === 'boolean'\n    ? { children } : { ...container, children }\n\n  return (\n    <nav id={id} className={style.trim()}>\n      {container ? <Container {...c_props} /> : children}\n    </nav>\n  )\n}\n\nconst DeckNavigation = ({ active, slides }) => {\n  return (\n    <MobileContext.Consumer>\n      {({ mobile }) => {\n        if (mobile) return null\n\n        return (\n          <Navigation>\n            {slides.map((slide, i) => {\n              const style = active === i ? 'active' : ''\n              return <SquareIcon className={style} key={`sq-${i}`} />\n            })}\n          </Navigation>\n        )\n      }}\n    </MobileContext.Consumer>\n  )\n}\n\nexport { Navigation as default, DeckNavigation }\n","// Packages\nimport React, { Fragment } from 'react'\nimport $ from 'jquery'\n\n// Components\nimport { Link, SquareIcon } from '../atoms'\n\n/**\n * @file Component representing a news ticker.\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\n/**\n * Renders a <div> element with the base class 'ado-ticker'.\n *\n * @todo Update documentation\n *\n * @param {object} props - Component properties\n * @param {object} props.items - Ticker content\n * @param {object | undefined} state\n */\nconst Ticker = props => {\n  const { className, id, items } = props\n\n  $('.ado-ticker > .items').css('animation-duration', `${items.length * 5}s`)\n\n  return (\n    <div id={id} className={(`ado-ticker ${className || ''}`).trim()}>\n      <div className='items'>\n        {items.map((item, i) => {\n          const id = `ticker-item-${i}`\n\n          return (\n            <div className='ticker-item' id={id} key={id}>\n              {\n                i === items.length - 1\n                  ? <Link {...item} />\n                  : <Fragment><Link {...item} /><SquareIcon /></Fragment>\n              }\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default Ticker\n","// Packages\nimport React, { Component } from 'react'\n\n// Components\nimport { Container, Heading } from '../atoms'\n\n/**\n * Class representing an error screen.\n *\n * @todo Transform all errors to FeathersError via getDerivedStateFromProps\n *\n * @class Error\n * @extends Component\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\nexport default class Error extends Component {\n  /**\n   * Creates a new Error screen component.\n   *\n   * @param {object} props - Component properties\n   * @param {FeathersError} props.error - Current error\n   * @param {string} props.error.message - Current error message\n   * @param {object} props.info - Error info\n   */\n  constructor(props) {\n    super(props)\n\n    /**\n     * @property {object} state - Internal component state\n     * @property {boolean} state.analytics - True if Google Analytics was\n     * initialized; this value will be updated in a production Node environment\n     * @property {string | null} state.deck - Id of current deck\n     * @property {FeathersError | null} state.error - Current error\n     * @property {object} state.info - Error information\n     * @property {boolean} state.loading - True if fetching content\n     * @property {boolean} state.mobile - True if viewport width <= 768px\n     * @property {object[] | null} state.slides - Slide content\n     * @property {object[] | null} state.ticker - Ticker content\n     * @instance\n     */\n    this.state = {\n      error: null,\n      info: null\n    }\n  }\n\n  /**\n   * getDerivedStateFromProps is invoked right before calling the render method,\n   * both on the initial mount and on subsequent updates. It should return an\n   * object to update the state, or null to update nothing.\n   *\n   * Until a client side Feathers application is set up, component will update\n   * the internal state deck data based on the incoming props.\n   *\n   * The internal mobile state will also be updated.\n   *\n   * @param {object} props - Incoming component properties\n   * @param {object} state - Incoming component state\n   * @returns {object | null}\n   */\n  static getDerivedStateFromProps(props, state) {\n    const { error, info, transform } = props\n    return { error: transform(error), info: info || error.stack }\n  }\n\n  /**\n   * Sets the error name as the document title. Afterwards, an error report may\n   * be sent to a dedicated Slack channel.\n   *\n   * @async\n   * @returns {undefined}\n   */\n  async componentDidMount() {\n    const { error } = this.state\n    const { transform } = this.props\n\n    document.title = `${error.name}: ${error.message}`\n\n    try {\n      // Determine if an error report should be sent\n      await this.report()\n    } catch (err) {\n      this.setState({ error: transform(err), info: err.stack })\n    }\n  }\n\n  /**\n   * Renders a <main> element representing an error screen.\n   * The page will display the error name, message, and stack information.\n   *\n   * @returns {HTMLElement} <main> element\n   */\n  render() {\n    const { className, error, id, info } = this.props\n    const style = (`ads-error ${error.className} ${className || ''}`).trim()\n\n    return (\n      <main id={id} className={style}>\n        <Container>\n          <Heading>Sorry, there was an error.</Heading>\n          <code><span>{error.name}</span>&nbsp;{error.message}</code>\n          <code>{error.data}</code>\n          <code>{info}</code>\n        </Container>\n      </main>\n    )\n  }\n\n  // Helpers\n\n  /**\n   * Based on the current error state, the method will determine if an error\n   * report needs to be sent to the dbktv-errors Slack channel.\n   *\n   * @todo Determine if error needs to be sent\n   * @returns {FeathersError} Current error\n   */\n  report = async () => {\n    const { error } = this.state\n\n    // TODO: Determine if error needs to be sent\n\n    return error\n  }\n}\n","// Packages\nimport React, { Component } from 'react'\n\n// Components\nimport { Container } from '../atoms'\nimport { Loading as LoadingMolecule } from '../molecules'\n\n/**\n * Class representing the loading screen.\n *\n * @todo Update documentation\n *\n * @class Loading\n * @extends Component\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\nexport default class Loading extends Component {\n  /**\n   * Updates the document title.\n   *\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    document.title = 'Loading DiamondbackTV'\n  }\n\n  /**\n   * Renders a <main> element representing the loading screen. Displays the\n   * DiamondbackTV logo, the dbknews.com plug, and a loading spinner.\n   *\n   * @param {object} props - Component properties\n   * @param {object} state - Component state\n   * @returns {HTMLElement} <main> element\n   */\n  render() {\n    const { className, id } = this.props\n\n    return (\n      <main id={id} className={(`ads-loading ${className || ''}`).trim()}>\n        <Container>\n          <LoadingMolecule />\n        </Container>\n      </main>\n    )\n  }\n}\n","// Packages\nimport React, { Component } from 'react'\nimport { MemoryRouter } from 'react-router'\nimport ReactGA from 'react-ga'\nimport $ from 'jquery'\n\n// Context\nimport { MobileContext } from './context'\n\n// Components\nimport { Logo } from './molecules'\nimport { Deck, DeckNavigation, Footer, Header, Ticker } from './organisms'\nimport { Error, Loading } from './screens'\n\n/**\n * Class representing the web application.\n *\n * @class App\n * @extends Component\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\nexport default class App extends Component {\n  /**\n   * Creates a new Diamondback TV web application.\n   *\n   * @todo Update documentation\n   * @param {object} props - Component properties\n   * @returns {App}\n   */\n  constructor(props) {\n    super(props)\n\n    const { NODE_ENV } = process.env\n\n    /**\n     * @todo Get tracking id\n     *\n     * @property {*[]} analytics - Google Analytics configuration options\n     * @property {string} analytics[0] - Google Analytics tracking id\n     * @property {object} analytics[1] - Additional config options\n     * @instance\n     */\n    this.analytics = ['', { debug: ['development', 'test'].includes(NODE_ENV) }]\n\n    /**\n     * @property {string} env - development | test | staging | production\n     * @instance\n     */\n    this.env = NODE_ENV\n\n    /**\n     * @property {boolean} logging - For general messages, logging should be\n     * enabled if the Node environment is 'development' or 'test'\n     * @instance\n     */\n    this.logging = ['development', 'test'].includes(NODE_ENV)\n\n    /**\n     * @property {object} state - Internal component state\n     * @property {boolean} state.analytics - True if Google Analytics was\n     * initialized; this value will be updated in a production Node environment\n     * @property {string | null} state.deck - Id of current deck\n     * @property {FeathersError | null} state.error - Current error\n     * @property {object} state.info - Error information\n     * @property {boolean} state.loading - True if fetching content\n     * @property {boolean} state.mobile - True if viewport width <= 768px\n     * @property {object[] | null} state.slides - Slide content\n     * @property {object[] | null} state.ticker - Ticker content\n     * @instance\n     */\n    this.state = {\n      analytics: false,\n      deck: null,\n      error: null,\n      info: null,\n      loading: true,\n      mobile: $(window).width() <= 768,\n      slides: null,\n      ticker: null\n    }\n\n    /**\n     * @property {object} subscriptions - Database subscriptions\n     * @instance\n     */\n    this.subscriptions = {}\n  }\n\n  /**\n   * getDerivedStateFromProps is invoked right before calling the render method,\n   * both on the initial mount and on subsequent updates. It should return an\n   * object to update the state, or null to update nothing.\n   *\n   * Until a client side Feathers application is set up, component will update\n   * the internal state deck data based on the incoming props.\n   *\n   * The internal mobile state will also be updated.\n   *\n   * @todo Setup Feathers via component props\n   *\n   * @param {object} props - Incoming component properties\n   * @param {object} state - Incoming component state\n   * @returns {object | null}\n   */\n  static getDerivedStateFromProps(props, state) {\n    const { mock, utils } = props\n    return { ...mock, mobile: utils.ui.is_mobile() }\n  }\n\n  /**\n   * Invoked after an error has been thrown by a descendant component.\n   *\n   * The error will transformed into a FeathersError if it isn't already of that\n   * type. Afterwards, the internal error state will be updated.\n   *\n   * @param {FeathersError | Error} error - Current error\n   * @param {object} info - Error information\n   * @returns {undefined}\n   */\n  componentDidCatch(error, info) {\n    // Transform error and update internal state\n    this.setState({ error: this.error(error), info })\n  }\n\n  /**\n   * Subscribes to deck data changes and attaches a window listener to update\n   * the internal mobile state. In a 'production' Node environment, Google\n   * Analytics and Pageview tracking will be initialized.\n   *\n   * @async\n   * @returns {undefined}\n   * @throws {GeneralError | NotFound}\n   */\n  async componentDidMount() {\n    if (this.logging) console.info('Application mounted.')\n\n    // TODO: Subscribe to deck changes and update internal state\n\n    // Attach window listener to update internal mobile state\n    this.resize()\n    $(window).resize(() => this.resize())\n\n    // Google Analytics and Pageview tracking\n    this.tracking()\n\n    // Update loading state\n    this.fetch(false)\n  }\n\n  /**\n   * componentDidUpdate() is invoked immediately after updating occurs.\n   * This method is not called for the initial render, and it will not be\n   * invoked if shouldComponentUpdate() returns false.\n   *\n   * @see @method getSnapshotBeforeUpdate returns an object containing the last\n   * values of the internal slide position and mobile states.\n   *\n   * After the application has been reloaded, the internal slide position and\n   * mobile states will be updated.\n   *\n   * @param {object} props - Previous component props\n   * @param {object} state - Previous component state\n   * @param {object} snapshot - @see @method getSnapshotBeforeUpdate\n   * @returns {undefined}\n   *\n   * @see\n   * {@link https://reactjs.org/docs/react-component.html#componentdidupdate}\n   */\n  componentDidUpdate(props, state, snapshot) {\n    const { id, mobile } = snapshot\n    if (state.id !== id || state.mobile !== mobile) {\n      this.setState({ id, mobile })\n    }\n  }\n\n  /**\n   * Before the component unmounts, our deck subscriptions will be removed and\n   * the window listener to update the mobile state will be removed.\n   *\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    // TODO: Unsubscribe from deck changes\n\n    // Remove window listener\n    $(window).off('resize')\n  }\n\n  /**\n   * getSnapshotBeforeUpdate() is invoked right before the most recently\n   * rendered output is committed to e.g. the DOM.\n   *\n   * It enables your component to capture some information from the DOM (e.g.\n   * scroll position) before it is potentially changed.\n   *\n   * Any value returned by this lifecycle will be passed as\n   * a parameter to @see @method componentDidUpdate().\n   *\n   * @param {object} props - Previous component props\n   * @param {object} state - Previous component state\n   * @returns {object} Object containing position of current slide and a boolean\n   * value indicating if the user is on a mobile device\n   */\n  getSnapshotBeforeUpdate(props, state) {\n    return { id: state.id, mobile: $(window).width() <= 768 }\n  }\n\n  /**\n   * Returns the web application.\n   *\n   * If an error is caught, the Error screen component will be rendered,\n   * displaying the error name, message, and additional error information.\n   *\n   * While the application is loading, the Loading screen component will be\n   * rendered, displaying the DiamondbackTV logo with 'Continuing reading on\n   * dbknews.com' below it.\n   *\n   * After the application has finished loading, the Header, Deck, Footer, and\n   * child components will be rendered.\n   *\n   * On mobile devices, a list of the deck slides will be displayed.\n   *\n   * @returns {<MemoryRouter/>}\n   */\n  render() {\n    const { error, id, info, loading, mobile, slides, ticker } = this.state\n    const { utils } = this.props\n\n    // Handle error and loading states\n    if (error) return <Error error={error} info={info} transform={this.error} />\n    if (loading) return <Loading />\n\n    // Gather Deck component properties\n    const routes = this.routes(slides)\n    const deck = { error: this.error, fetch: this.fetch, slides: routes, utils }\n\n    // Render application\n    return (\n      <MemoryRouter initialEntries={routes} initialIndex={0}>\n        <MobileContext.Provider value={{ mobile }}>\n          <Header container>\n            <Logo />\n          </Header>\n          <DeckNavigation active={id} slides={routes} />\n          <Deck {...deck} />\n          <Footer>\n            <Logo mini={mobile} />\n            <Ticker items={ticker} />\n          </Footer>\n        </MobileContext.Provider>\n      </MemoryRouter>\n    )\n  }\n\n  // HELPERS\n\n  /**\n   * Transform the incoming error into a FeathersError.\n   *\n   * @param {FeathersError | Error} error - Exception that was thrown\n   * @param {object} info - Error infomation\n   * @returns {FeathersError}\n   * @see {@link https://docs.feathersjs.com/api/errors.html#feathers-errors}\n   */\n  error = error => {\n    const { name } = error\n\n    const feathers_errors = [\n      'BadGateway', 'BadRequest', 'Conflict', 'Forbidden', 'GeneralError', 'LengthRequired', 'NotAuthenticated', 'NotFound', 'NotImplemented', 'PaymentError', 'MethodNotAllowed', 'NotAcceptable', 'Timeout', 'TooManyRequests', 'Unavailable', 'Unprocessable'\n    ]\n\n    // Return error already a FeathersError\n    if (feathers_errors.includes(name)) return error\n\n    // Return transformed error\n    const { utils } = this.props\n    return utils.error.feathers(error, { data: { errors: { origin: name } } })\n  }\n\n  /**\n   * Updates the internal loading state.\n   *\n   * @param {boolean} loading - True if fetching content, false otherwise\n   * @returns {boolean} @see @param loading\n   */\n  fetch = loading => this.setState({ loading }, () => loading)\n\n  /**\n   * Updates the internal slide id state.\n   *\n   * @param {number} id - Index of current slide\n   * @returns {number} @see @param id\n   */\n  id = id => this.setState({ id }, () => id)\n\n  /**\n   * Updates the internal mobile state.\n   *\n   * @returns {undefined}\n   */\n  resize = () => this.setState({ mobile: $(window).width() <= 768 })\n\n  /**\n   * Transforms an array of slide objects into an array of route objects.\n   * This is necessary for our MemoryRouter.\n   *\n   * If @param slides is undefined, the internal error state will be updated\n   * with a NotFound error and the method will return undefined.\n   *\n   * @todo slide.pathname = slide.slug\n   *\n   * @param {object[]} slides - Array of slide objects\n   * @returns {object[]} Array of route objects\n   * @throws {NotFound}\n   */\n  routes = slides => {\n    if (this.logging) console.warn('ROUTING -> Getting routes...')\n\n    if (!slides) {\n      const { error } = this.props.utils\n      return this.setState({\n        error: error.feathers('ROUTING ERR -> Slides not found.', null, 404)\n      })\n    }\n\n    // Turn slide object into route objects\n    return slides.map((slide, i) => {\n      slide.position = i\n      slide.mobile = this.state.mobile\n      // TODO: slide.pathname = slide.slug\n      return { pathname: `/slides/${i + 1}`, pos: this.id, state: { slide } }\n    })\n  }\n\n  /**\n   * In a production Node environment, Google Analytics and Pageview tracking\n   * will be initialized.\n   *\n   * @returns {boolean} True if production Node environment and Google Analytics\n   * was successfully initialized\n   */\n  tracking = () => {\n    let analytics = false\n\n    if (this.logging) {\n      console.warn('Google Analytics and Pageview tracking will not be initialized in development or test environments.')\n    }\n\n    if (this.env === 'production') {\n      const { pathname, search } = window.location\n\n      // Initialize Google Analytics and pageview tracking\n      ReactGA.initialize(...this.analytics)\n      ReactGA.pageview(pathname + search)\n\n      analytics = true\n    }\n\n    return this.setState({ analytics }, () => analytics)\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","// Packages\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\n// Firebase\nimport { deck } from './api'\n\n// Utility functions\nimport utils from './utils'\n\n// React application\nimport App from './components/App'\n\n// Service worker\nimport * as sw from './config/sw.config'\n\n// Compiled Sass stylesheet\nimport './sass/app.sass'\n\n/**\n * @file Application entry point\n *\n * @todo Feathers client application\n * @todo Slack reporting\n *\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\n */\n\n/**\n * Component that connects the Feathers application to our React application.\n *\n * Until a client side Feathers app is initialized, we will pass the mock data\n * as a component property. Our utility functions will also be passed as\n * component properties.\n *\n * @todo Replace api prop with Feathers application\n * @returns {<App/>}\n */\nconst FeathersApp = () => <App api={{}} mock={deck} utils={utils} />\n\n// Render connected Feathers application into <div id=\"root\"></div>\nReactDOM.render(<FeathersApp />, document.getElementById('root'))\n\n/**\n * If you want your app to work offline and load faster, you can change\n * unregister() to register() below. Note this comes with some pitfalls.\n * @see {@link https://bit.ly/CRA-PWA}\n */\nsw.unregister()\n"],"sourceRoot":""}